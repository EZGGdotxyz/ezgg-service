// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator zod {
  provider                     = "zod-prisma-types"
  writeDocumentationAsDescribe = "true"
  createInputTypes             = "false"
}

model SysUser {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  /// 管理员
  name     String  @db.VarChar(32)
  /// 用户账户
  username String  @unique @db.VarChar(64)
  /// 密码
  password String  @db.VarChar(255)
  /// 手机号码
  phone    String? @unique @db.VarChar(32)
  /// 电子邮箱
  mail     String? @unique @db.VarChar(255)
  /// 备注信息
  remark   String? @db.VarChar(255)
  /// 停用/启用标识；false 停用；true 启用
  enabled  Boolean @default(true)

  @@map("sys_user")
}

model Member {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  /// Privy User DID
  did       String   @unique @db.VarChar(64)
  /// Privy User 创建时间
  createdAt DateTime
  /// 昵称
  nickname  String?  @db.VarChar(32)
  /// 头像地址
  avatar    String?  @db.VarChar(255)

  memberLinkedAccount MemberLinkedAccount[]

  @@map("member")
}

model MemberRecent {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  /// 所属会员id
  memberId       Int                @default(0) @db.UnsignedInt
  /// 关联会员id
  relateMemberId Int                @default(0) @db.UnsignedInt
  /// 最近操作类型
  action         MemberRecentAction
  /// 最近联系时间
  recent         DateTime           @default(now()) @updatedAt
}

enum MemberRecentAction {
  SEND
  RECEIVE
}

model MemberLinkedAccount {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  /// 用户id
  memberId Int    @db.UnsignedInt
  member   Member @relation(fields: [memberId], references: [id])

  /// Privy User DID
  did    String @db.VarChar(64)
  /// Privy User LinkedAccount的类型
  type   String @db.VarChar(32)
  /// Privy User 绑定账号详情JSON
  detail String @db.Text
  /// 从detail提取的用于检索的字段
  search String @db.VarChar(255)

  @@index([memberId])
  @@index([search])
  @@map("member_linked_account")
}

enum BlockChainPlatform {
  ETH
  SOLANA
}

enum BlockChainNetwork {
  MAIN
  TEST
  DEV
}

enum ERC {
  ERC20
}

enum BIZ {
  LINK
  VAULT
  TRANSFER
}

/// 区块链信息
model BlockChain {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  /// 区块链平台
  platform       BlockChainPlatform
  /// 区块链id
  chainId        Int
  /// 区块链网络
  network        BlockChainNetwork
  /// 区块链名称
  name           String
  /// 是否在用户端展示
  show           Boolean            @default(true)
  /// 排序号
  sort           Int
  /// Alchemy RPC API地址
  alchemyRpc     String?            @db.VarChar(255)
  /// Alchemy Network 枚举值
  alchemyNetwork String?            @db.VarChar(255)

  /// 原生代币符号
  tokenSymbol String
  /// 原生代币价格（美元）
  tokenPrice  String?

  @@unique([platform, chainId])
  @@map("block_chain")
}

/// 代币合约信息
model TokenContract {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  /// 代币合约地址
  address       String
  /// 区块链平台
  platform      BlockChainPlatform
  /// 区块链id
  chainId       Int
  /// 区块链网络
  network       BlockChainNetwork
  /// 代币标准
  erc           ERC
  /// 代币名称
  tokenName     String?
  /// 代币符号
  tokenSymbol   String?
  /// 代币精度
  tokenDecimals Int?               @db.UnsignedInt
  /// 代币图标
  logo          String?            @db.VarChar(255)

  /// 是否在用户端展示
  show Boolean @default(true)
  /// 排序号
  sort Int

  /// 代币价格 - 币种
  priceCurrency   String?   @default("usd") @db.VarChar(8)
  /// 代币价格
  priceValue      String?
  /// 代币价格更新时间
  priceUpdateAt   DateTime?
  /// 代币价格自动更新标识
  priceAutoUpdate Boolean   @default(false) @db.UnsignedTinyInt

  /// 是否支持支付手续费
  feeSupport Boolean @default(true) @db.UnsignedTinyInt

  @@unique([platform, chainId, address])
  @@map("token_contract")
}

/// 业务合约信息
model BizContract {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  /// 业务合约地址
  address  String
  /// 区块链平台
  platform BlockChainPlatform
  /// 区块链id
  chainId  Int
  /// 区块链网络
  network  BlockChainNetwork
  /// 业务类型枚举
  business BIZ
  /// 是否启用
  enabled  Boolean
  /// 合约版本
  ver      Int

  @@unique([platform, chainId, business])
  @@unique([platform, chainId, address])
  @@map("biz_contract")
}

enum TransactionStatus {
  PENDING
  ACCEPTED
  DECLINED
}

enum TransactionCategory {
  SEND
  REQUEST
  DEPOSIT
  WITHDRAW
}

enum TransactionType {
  SEND
  REQUEST
  DEPOSIT
  WITHDRAW
  PAY_LINK
  QR_CODE
  REQUEST_LINK
  REQUEST_QR_CODE
}

/// 交易历史记录
model TransactionHistory {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  /// 交易创建人 - 会员id
  memberId Int @db.UnsignedInt

  /// 交易编码
  transactionCode String @unique @db.VarChar(64)

  /// 交易分类
  transactionCategory TransactionCategory
  /// 交易类型
  transactionType     TransactionType
  /// 业务类型枚举
  business            BIZ?
  /// 业务合约地址
  bizContractAddress  String?             @db.VarChar(255)

  /// 付款人 - 会员id
  senderMemberId      Int?    @db.UnsignedInt
  /// 付款人 - Privy 用户id
  senderDid           String?
  /// 付款人 - 钱包地址
  senderWalletAddress String? @db.VarChar(255)

  /// 收款人 - 会员id
  receiverMemberId      Int?    @db.UnsignedInt
  /// 收款人 - Privy 用户id
  receiverDid           String?
  /// 收款人 - 钱包地址
  receiverWalletAddress String? @db.VarChar(255)

  /// 交易状态：PENDING 待支付；ACCEPTED 已支付；DECLINED 已拒绝；
  transactionStatus    TransactionStatus
  /// 交易发起时间
  transactionTime      DateTime          @db.DateTime(3)
  /// 交易确认时间
  transactionConfirmAt DateTime?         @db.DateTime(3)
  /// 交易哈希
  transactionHash      String?           @db.VarChar(255)

  /// 区块链平台
  platform             BlockChainPlatform
  /// 区块链id
  chainId              Int
  /// 区块链网络
  network              BlockChainNetwork
  /// 代币符号
  tokenSymbol          String?
  /// 代币精度
  tokenDecimals        Int?               @db.UnsignedInt
  /// 代币合约地址
  tokenContractAddress String             @db.VarChar(255)
  /// 代币兑美元价格
  tokenPrice           String?
  /// 代币是否支持支付网络费用
  tokenFeeSupport      Boolean            @default(true) @db.UnsignedTinyInt

  /// 交易金额（代币数量）
  amount BigInt @db.UnsignedBigInt

  /// 附带留言
  message String? @db.VarChar(255)

  @@unique([platform, chainId, transactionHash])
  @@map("transaction_history")
}

model PayLink {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  // 交易历史id
  transactionHistoryId Int    @unique @db.UnsignedInt
  /// 交易编码
  transactionCode      String @unique @db.VarChar(64)

  /// 区块链平台
  platform             BlockChainPlatform
  /// 区块链id
  chainId              Int
  /// 区块链网络
  network              BlockChainNetwork
  /// 代币合约地址
  tokenContractAddress String             @db.VarChar(255)
  /// 付款人 - 钱包地址
  senderWalletAddress  String             @db.VarChar(255)
  /// 业务合约地址
  bizContractAddress   String             @db.VarChar(255)
  /// OTP
  otp                  String             @db.VarChar(255)
  /// 交易哈希
  transactionHash      String?            @db.VarChar(255)
}

model Setting {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  ///  会员id
  memberId Int @unique @db.UnsignedInt

  /// 交易状态更新
  notifyTransUpdate     Boolean @default(true) @db.UnsignedTinyInt
  /// 欺诈或可疑活动报警
  notifyAbnormalAlarm   Boolean @default(true) @db.UnsignedTinyInt
  /// 付款请求通知
  notifyPayRequest      Boolean @default(true) @db.UnsignedTinyInt
  /// Card Activity Notification
  notifyCardActivity    Boolean @default(true) @db.UnsignedTinyInt
  /// 客户支持通知
  notifyCustomerSupport Boolean @default(true) @db.UnsignedTinyInt
  /// 账户余额警报
  notifyBalanceAlarm    Boolean @default(true) @db.UnsignedTinyInt
  /// 安全警报
  notifySecureAlarm     Boolean @default(true) @db.UnsignedTinyInt
  /// 每日或每周摘要
  notifySummary         Boolean @default(true) @db.UnsignedTinyInt
  /// 应用程序更新与增强
  sysAppUpdate          Boolean @default(true) @db.UnsignedTinyInt
  /// 促销优惠与更新
  sysSalesPromotion     Boolean @default(true) @db.UnsignedTinyInt
  /// 参与调研
  sysSurvey             Boolean @default(true) @db.UnsignedTinyInt
}

/// 站内信
model Notification {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  /// 通知来源枚举：SYSTEM 系统自动触发；ADMIN 管理后台发送；
  source       String       @db.VarChar(64)
  /// 通知主题枚举：GENERAL 普通通知；TRANS_UPDATE 交易状态更新；ALARM 欺诈或可疑活动报警；PAY_REQUEST 付款请求通知；CUSTOMER_SUPPORT 客户支持通知；BALANCE_ALARM 账户余额警报；SECURE_ALARM 安全警报；SUMMARY 每日或每周摘要；APP_UPDATE 应用程序更新与增强；SALES_PROMOTION 促销优惠与更新；SURVEY 参与调研；
  subject      String       @db.VarChar(64)
  /// 交易状态更新动作枚举：REQUEST_ACCEPTED 请求已接受；REQUEST_DECLINED 请求已拒绝；PAY_LINK_ACCEPTED PayLink已接受；
  action       String?      @db.VarChar(64)
  /// 标题
  title        String?      @db.VarChar(255)
  /// 正文
  context      String?      @db.Text
  /// 接收人会员id
  toMemberId   Int          @db.UnsignedInt
  /// 接收人交易角色角色：NONE 未指定；SENDER 付款人；RECEIVER 收款人
  toMemberRole ToMemberRole
  /// 状态值：0 未读；1已读
  status       Int          @default(0) @db.TinyInt
  /// 通知时间
  notifyAt     DateTime
  /// 读取时间
  readAt       DateTime?

  /// 关联交易历史id
  transactionHistoryId Int? @db.UnsignedInt

  @@map("notification")
}

enum ToMemberRole {
  NONE
  SENDER
  RECEIVER
}

model TransactionFeeEstimate {
  /// 主键
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 是否删除 @zod.custom.omit(["model"])
  deleted  Int       @default(0) @db.UnsignedInt
  /// 创建人 id
  createBy Int       @default(0) @db.UnsignedInt
  /// 修改人 id
  updateBy Int       @default(0) @db.UnsignedInt
  /// 创建时间
  createAt DateTime  @default(now())
  /// 修改时间
  updateAt DateTime  @default(now()) @updatedAt
  /// 删除时间 @zod.custom.omit(["model"])
  deleteAt DateTime?

  // 交易历史id
  transactionHistoryId Int    @unique @db.UnsignedInt
  /// 交易编码
  transactionCode      String @unique @db.VarChar(64)

  /// 区块链平台
  platform BlockChainPlatform
  /// 区块链id
  chainId  Int
  /// ETH兑美元价值
  ethToUsd String

  /// 代币符号
  tokenSymbol          String
  /// 代币精度
  tokenDecimals        Int    @db.UnsignedInt
  /// 代币合约地址
  tokenContractAddress String @db.VarChar(255)
  /// 代币兑美元价格
  tokenPrice           String

  /// UserOperation打包前，序列化，基础校验消耗的gas
  preVerificationGas   String @db.VarChar(255)
  /// UserOperation打包，验证合法性，校验签名消耗的gas
  verificationGasLimit String @db.VarChar(255)
  /// UserOperation执行用户操作消耗的gas
  callGasLimit         String @db.VarChar(255)
  /// 合计消耗的gas
  gas                  String @db.VarChar(255)
  /// gas价格(单位wei)
  gasPrice             String @db.VarChar(255)

  /// 总费用(单位wei)
  totalWeiCost   String @db.VarChar(255)
  /// 总费用(单位eth)
  totalEthCost   String @db.VarChar(255)
  /// 总费用(单位usd)
  totalUsdCost   String @db.VarChar(255)
  /// 平台费用(单位usd)
  platformFee    String @db.VarChar(255)
  /// 最终费用(单位token)
  totalTokenCost String @db.VarChar(255)

  @@map("transaction_fee_estimate")
}
